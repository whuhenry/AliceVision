image: Visual Studio 2019
configuration: Release

branches:
  only:
    - master
    - develop  # PRs are built

# environment: 
#   APPVEYOR_SAVE_CACHE_ON_ERROR: true

install:
    - git submodule update --init --recursive
    - cmd: >-
         call cudaInstallAppveyor.cmd
    - cd c:\tools\vcpkg\
    - git fetch https://github.com/aliceVision/vcpkg.git alicevision_master:alicevision_master
    - git checkout alicevision_master
    - .\bootstrap-vcpkg.bat
    - vcpkg upgrade --no-dry-run
    - vcpkg list
    - vcpkg install
          boost-algorithm boost-accumulators boost-atomic boost-container boost-date-time boost-exception boost-filesystem boost-graph boost-log boost-program-options boost-property-tree boost-ptr-container boost-regex boost-serialization boost-system boost-test boost-thread
          openexr 
          openimageio[libraw] 
          alembic 
          geogram 
          eigen3 
          ceres[suitesparse]
          cuda
          --triplet x64-windows
          --recurse
    - vcpkg list

before_build:
    - cd %APPVEYOR_BUILD_FOLDER%
    - md build
    - cd build
    - cmake .. -A x64
            -DCMAKE_BUILD_TYPE=%CONFIGURATION%
            -DALICEVISION_USE_INTERNAL_CERES:BOOL=OFF
            -DALICEVISION_USE_CUDA:BOOL=ON
            -DALICEVISION_BUILD_EXAMPLES:BOOL=ON
            -DCMAKE_TOOLCHAIN_FILE=c:/tools/vcpkg/scripts/buildsystems/vcpkg.cmake
    - ls -l

build:
  project: build\aliceVision.sln
  verbosity: minimal

#comment the above and uncomment the following to just build the dependencies
# build_script:
#  - echo "Dependencies installed."

cache:
  c:\tools\vcpkg\installed\

# 7z Win64 build and push build to artifacts, include Licenses and Copyright information

after_build:
  - set BUILD_ARCHIVE=%APPVEYOR_BUILD_FOLDER%\build\alicevisionWin64snapshot-%APPVEYOR_PULL_REQUEST_HEAD_COMMIT%.zip
  - 7z a %BUILD_ARCHIVE% %APPVEYOR_BUILD_FOLDER%\build\Windows-AMD64\Release\* %APPVEYOR_BUILD_FOLDER%\LICENSE* %APPVEYOR_BUILD_FOLDER%\COPYING.md

artifacts:
  - path: 'build\*.zip'
